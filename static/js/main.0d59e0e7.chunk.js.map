{"version":3,"sources":["components/landingpage/Landingpage.js","components/app/App.js","redux/reducers/index.js","index.js"],"names":["Landingpage","className","App","path","component","rootReducer","combineReducers","store","createStore","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"6RAQeA,G,MANK,WAChB,OACI,yBAAKC,UAAU,kBCkBRC,EAdH,WACR,OACI,kBAAC,IAAD,KACI,kBAAC,IAAD,KACI,yBAAKD,UAAU,OACX,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAOE,KAAK,IAAIC,UAAWJ,SCVpCK,EAFKC,0BAAgB,ICYhCC,EAAQC,sBAAYH,EAAaI,8BAAoBC,0BAAgBC,OAEzEC,IAASC,OACL,kBAAC,IAAD,CAAUN,MAAOA,GACb,kBAAC,EAAD,OAEJO,SAASC,eAAe,W","file":"static/js/main.0d59e0e7.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Landingpage = () => {\r\n    return (\r\n        <div className=\"Landingpage\"></div>\r\n    );\r\n}\r\n\r\nexport default Landingpage;","import React from 'react';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport ScrollToTop from 'react-router-scroll-top';\n\nimport './App.css';\n\nimport Landingpage from '../landingpage/Landingpage';\n\nconst App = () => {\n    return (\n        <Router>\n            <ScrollToTop>\n                <div className='App'>\n                    <Switch>\n                        <Route path='/' component={Landingpage} />\n                    </Switch>\n                </div>\n            </ScrollToTop>\n        </Router>\n    );\n};\n\nexport default App;\n","import { combineReducers } from 'redux';\r\n\r\nconst rootReducer = combineReducers({});\r\n\r\nexport default rootReducer;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { Provider } from 'react-redux';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\n\nimport App from './components/app/App';\nimport rootReducer from './redux/reducers';\n\nlet store = createStore(rootReducer, composeWithDevTools(applyMiddleware(thunk)));\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}